
Shader "Skin/D3Transform"
{
   
    SubShader
    {
        pass
        {
           CGPROGRAM
            #pragma vertex vert
            #pragma fragment frag
            #include "unitycg.cginc"

            float4x4 mvp;
            float4x4 scaleObj;
            
            struct v2f{
                float4 pos:POSITION;
                fixed4 color:COLOR;
            };

            struct appdate_base{
                float4 vertex:POSITION;
            };

            v2f vert(appdate_base v)
            {
                v2f o;
                float4x4 m=mul(scaleObj,UNITY_MATRIX_MVP);
                o.pos=mul(m,v.vertex);
                //if(v.vertex.x<0)//模型不同位置颜色不同
                //    o.color=fixed4(1,0,0,1);
                //else
                //    o.color=fixed4(0,0,1,1);

                if(v.vertex.x==0.5&&v.vertex.y==0.5&&v.vertex.z==-0.5)
                    o.color=fixed4(_SinTime.w/2+0.5,_CosTime.w/2+0.5,_SinTime.w/2+0.5,1);
                else
                    o.color=fixed4(0,0,1,1);
                //颜色自动变

                //float4 wpos=mul(unity_ObjectToWorld,v.vertex);//到世界坐标某点变色，渐变
                //if(wpos.x>0)
                //   o.color=wpos;
                //else
                 //   o.color=wpos;
                return o;
            }

            fixed4 frag(v2f IN):COLOR
            {
                return IN.color;
            }

            ENDCG
        }
    }

}   
